{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACrBD,SAASC,cAAc,UAMtC,SAASC,EAAWC,GAClBA,EAAMC,iBAEN,MAAMC,EAASF,EAAMG,cAAcC,SAASF,OAAOG,MAC7CC,EAAQN,EAAMG,cAAcC,SAASG,MAAMF,MAC3CG,EAAYR,EAAMG,cAAcC,SAASK,KAAKJ,MAErDK,YAAW,KACV,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAQS,IAE3BC,EAAcD,EAAGH,EAAYG,GAC5BE,MAAK,EAACC,SAAEA,EAAQP,MAAEA,MACnBQ,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBH,QAAiBP,MAAU,IAEzEW,OAAM,EAACJ,SAAEA,EAAQP,MAAEA,MACnBQ,EAAArB,GAASsB,OAAOG,QAAQ,sBAAoBL,QAAiBP,MAAU,GACtE,GAIAD,E,CAKJ,SAASM,EAAcE,EAAUP,GAC/B,OAAO,IAAIa,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpCf,YAAW,KACLa,GACFF,EAAQ,C,SAAEP,E,MAAUP,IAGtBe,EAAO,C,SAAER,E,MAAUP,GAAQ,GAE1BA,EAAM,G,CAvCfX,EAAK8B,iBAAiB,OAAQ3B,GAC9BH,EAAK8B,iBAAiB,SAAU3B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form')\nconst button = document.querySelector('button')\n\n \nform.addEventListener('blur', formSubmit)\nform.addEventListener('submit', formSubmit)\n\nfunction formSubmit(event) {\n  event.preventDefault()\n\n  const amount = event.currentTarget.elements.amount.value;\n  const delay = event.currentTarget.elements.delay.value\n  const stepDelay = event.currentTarget.elements.step.value;\n\n setTimeout(() => {\n  for (let i = 1; i <= amount; i++){\n\n    createPromise(i, stepDelay * i)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch(({ position, delay }) => {\n   Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n    \n  }\n }, delay);\n  \n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n      \n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        }\n        \n        reject({ position, delay })\n        \n      }, delay);\n    \n  })\n\n} \n\n\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   setTimeout(() => {\n//     if (shouldResolve) {\n//      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//     console.log(position);\n//     console.log(delay);\n//   } else {\n//     Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }\n//   }, delay);\n\n// }"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formSubmit","event","preventDefault","amount","currentTarget","elements","value","delay1","delay","stepDelay","step","setTimeout","i","$47d4ff9957288465$var$createPromise","then","position","$parcel$interopDefault","Notify","success","catch","warning","Promise","resolve","reject","shouldResolve","Math","random","addEventListener"],"version":3,"file":"03-promises.00a3abc8.js.map"}